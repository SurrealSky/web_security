权限提升（LPE）漏洞
=========================================

方式
-----------------------------------------
+ 传统权限提升
	- 攻击者最初只需要一个普通的用户权限（甚至有时只需要一个低权限的网络访问）。
	- 直接从低权限级别（如普通用户 user）提升到最高权限级别（如 SYSTEM 或 NT AUTHORITY\SYSTEM）。它跨越了最大的权限鸿沟。
+ UAC绕过
	- 攻击者必须已经获取了一个管理员组成员的用户会话（即使当前是以标准用户令牌运行）。如果一个用户完全不属于 Administrators 组，UAC绕过技术对此用户无效。
	- 从受限制的管理员账户（管理员权限被UAC“过滤”或“分割”的状态）提升到完整的管理员权限。它跨越的是UAC这个“安全护栏”，而不是用户组的根本边界。

攻击面
-----------------------------------------
+ 可写服务二进制路径（Weak Service Permissions）
    - 服务对应的可执行文件exe，其它低权限用户可读写。
+ 服务路径漏洞（Unquoted Service Path）
	- CreateProcess执行该路径时未加引号，同时lpApplicationName为NULL，系统会按以下方式依次解析该路径：
		+ 解析:``c:\program files\sub dir\1.exe``
		+ c:\\program.exe：系统首先会尝试将路径从字符串的开始部分截断，解析为 c:\\program.exe。
		+ c:\\program files\\sub.exe：如果第一个解析失败，系统会尝试将路径解析为 c:\\program files\\sub.exe。
		+ 最后系统尝试解析整个路径，认为 1.exe 是可执行文件名，并尝试执行它。
+ 不安全的服务操作（Insecure SERVICE_CHANGE_CONFIG）
	- 某些服务可能被配置为允许低权限用户对其进行控制，例如启动、停止、修改配置。
	- 利用方法：使用 sc sdshow <servicename> 命令可以查看服务的权限字符串。如果其中包含 (WD)（Everyone）的 RCWP（特别是 WP - Write Permission）权限，则存在风险。攻击者可以使用 sc config 等命令修改服务配置，指向恶意负载。
+ 自动安装的、以高权限运行且无需验证的辅助进程
	- 原理：一些第三方软件会安装一个一直运行的高权限服务，该服务开放了一个接口（如 **命名管道、RPC接口、本地Socket** ），等待来自用户态程序的指令。
	- 漏洞产生方式：这个高权限服务在接受指令时，没有进行充分的验证（例如，没有验证调用者程序的数字签名、路径或完整性），或者其指令接口本身存在代码执行漏洞（如缓冲区溢出）。
	- 利用方法：攻击者以一个普通用户的身份，编写一个程序向这个高权限服务的接口发送精心构造的恶意指令。服务接收到指令后，会无条件地以高权限执行攻击者想要的操作（例如，启动一个cmd.exe），从而绕过UAC。著名的 "UACME" 项目中很多绕过方法都属于此类，它们利用了大量合法软件（如Intel、NVIDIA、Citrix等）的此类服务。
+ DLL劫持
    - 服务进程DLL文件劫持
+ 文件移动操作劫持
    - 原理
        + Windows平台下高权限进程的Symlink攻击（高权限进程在操作文件时，未作严格的权限校验，导致攻击利用符号链接到一些受保护的目录文件，比如C盘的系统DLL文件，后面系统或应用去自动加载时，实现代码执行并提权）。
        + 应用程序在写入文件时，使用了SYSTEM用户权限，这种不安全的权限设置导致任意系统文件均可被重写。
        + 日志中的文件内容用户可控，攻击者向日志文件注入控制命令，然后将其存储为batch为文件来执行实现提权。
        + 基于windows符号链接来实现系统任意文件的读写。
    - 利用方式
        + 使用Promon监控进程文件写入行为。
            ::
            
                过滤Process Name为目标进程名，Opreation为WriteFile。
                检查程序是否使用administrator或SYSTEM权限进行操作文件。
        + 检查权限
            ::
            
                检查普通用户(Everyone)拥有对这些文件的完全控制权限。
        + 创建普通权限用户
            ::
            
                创建一个普通用户登录，查看是否对目标文件具有完全控制权限。
        + 创建软链接或符号链接
            ::
            
                创建软链接方法（任意文件读，写，删除等漏洞）：
                CreateMountPoint.exe D:\test C:\ProgramData\Microsoft\Windows\Start Menu\Programs\StartUp
                此时，当进程操作test目录下文件，即是对系统启动目录下的文件操作。
                注：可以控制文件内容中包含如 & mkdir c:\windows\test &，就可进行命令执行。
                
                创建符号链接方法（任意文件读写漏洞）
                CreateSymlink.exe test\2.txt c:\2.bat
                注：test目录必须为空。
    - 若程序对CreateFile函数调用，检测GetLastError为REPARSE（重解析）导致漏洞无法利用
+ runas
    - 使用user组下普通用户test运行cmd.exe： ``runas /user:test cmd.exe``