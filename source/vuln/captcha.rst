验证码绕过
========================================

简介
----------------------------------------
验证码（CAPTCHA）是“Completely Automated Public Turing test to tell Computers and Humans Apart”（全自动区分计算机和人类的图灵测试）的缩写，是一种区分用户是计算机还是人的公共全自动程序。可以防止：恶意破解密码、刷票、论坛灌水，有效防止某个黑客对某一个特定注册用户用特定程序暴力破解方式进行不断的登陆尝试。

验证码分类
----------------------------------------
- 静态图片
- GIF图片
- 手机短信验证码
- 手机语音验证码
- 视频验证码

原理
----------------------------------------
::
	客户端发起请求->服务端响应并创建一个新的SessionID同时生成随机验证码，将验证码和SessionID一并返回给客户端->客户端提交验证码连同SessionID给服务端->服务端验证验证码同时销毁当前会话，返回给客户端结果。


安全问题
----------------------------------------

客户端可能存在的安全问题
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- 有的网站验证码由本地js生成仅仅在本地用js验证。可以在本地禁用js，用burp把验证字段删除。
- 有的网站把验证码内容输出到客户端html中，送到客户端Cookie或response headers。
- 有些网站默认不显示验证码，而是在输入错误一定数量之后才需要验证验证码，开发人员可能在Cookie中写入一个标记loginErr，用来记录错误数量，则可以不更新Cookie中的loginErr值反复提交，验证码就不会出现。

服务端可能存在的安全问题
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- 验证码不过期，没有及时销毁会话导致同一验证码反复可用。攻击者可以在Cookie中带固定的sessionID和固定的验证码字符串。
- 没有对验证码进行非空判断，导致可以直接删除验证码参数。
- 产生的验证码问题有限

验证码固定
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
导致验证码不刷新（固定）的原因是：登录密码错误之后，session中的值没有更新，验证码不变。验证码不刷新通常有以下两种情况：无条件不刷新、有条件不刷新。

- 无条件不刷新
	无条件不刷新是指在某一时间段内，无论登录失败多少次，只要不刷新页面，就可以无限次的使用同一个验证码来对一个或多个用户帐号进行暴力猜解。换句话说，攻击者可以在同一个会话下，在获得第一个验证码后，后面不再主动触发验证码生成页面，并且一直使用第一个验证码就可循环进行后面的表单操作，从而绕过了验证码的屏障作用，对登录进行暴力猜解。

- 有条件不刷新
	有条件不刷新多见于如下情况：登录失败之后，系统会打开一个新页面或者弹出一个新的警告窗口，提示用户登录失败，点击确定后返回登录界面且验证码刷新。这种情况下，只要我们不关闭新窗口或弹窗，配合使用Burpsuite的intruder模块就可以进行暴力破解了。

验证码前端可获取
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
这种情况在早期的一些网站中比较常见，主要是因为程序员在写代码的时候安全意识不足导致的。验证码通常会被他们隐藏在网站的源码中或者高级一点的隐藏在请求的Cookie中，但这两种情况都可以被攻击者轻松绕过。

验证码隐藏在源码之中
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
验证这种情况很简单，我们只需要记住验证码，然后右键打开网站源代码，Ctrl+F搜索，输入刚才的验证码，如果可以成功匹配到，那恭喜你，接下来就可以写工具，提取源码中的验证码并将其放入每次请求的报文中，来进行帐号破解，这里推荐使用python。

验证码隐藏在Cookie中
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
一般来说，我们会把验证码的值用Session存储起来，通过对比用户提交的验证码和Session中的验证码，就可以知道输入是否正确。由于Session会占用服务器资源，有的开发人员会把验证码的值加密后存储在Cookie中。
这种情况，我们可以在提交登录的时候抓包，然后分析一下包中的Cookie字段，看看其中有没有相匹配的验证码，或者是经过了一些简单加密后的验证码。

仅在客户端生成验证码
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
有的网站验证码由本地js生成仅仅在本地用js验证。

验证码薄弱
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- 验证码自动识别
	有的系统虽然在登录界面带了验证码，但是验证码功能薄弱，可以被工具识别，导致系统面临被爆破登录的风险。

- 验证码爆破登录

相关工具：Pkav HTTP Fuzzer